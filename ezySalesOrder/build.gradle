apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'
    def versionPropsFile = file('version.properties')
    def versionBuild
    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
//        throw new GradleException("Could not read version.properties!")
    }
    /*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
//            throw new GradleException("Could not read version.properties!")
        }
    }
    lintOptions {
        disable "ResourceType"
        disable 'MissingTranslation'
    }
    defaultConfig {


        applicationId "com.winapp.SFA"
        minSdkVersion 14
        targetSdkVersion 22

        versionCode 3
        versionName "3.0." + versionBuild

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        // Enabling multidex support.
        multiDexEnabled true
    }
    aaptOptions
            {
                cruncherEnabled = false
            }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    // Hook to check if the release/debug task is among the tasks to be executed.
//Let's make use of it
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
//            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            autoIncrementBuildNumber()
        }
    }
}



dependencies {
    compile project(':mPChartLib')
    compile project(':slidemenulibrary')
    compile 'com.google.android.gms:play-services:7.0.0'
    compile files('libs/crouton_library.jar')
    compile files('libs/imagezoom.jar')
    /*compile files('libs/ksoap2-android-assembly-2.6.2-jar-with-dependencies.jar')*/
    compile files('libs/ksoap2-android-assembly-3.4.0-jar-with-dependencies.jar')
    compile files('libs/mint-5.0.0.jar')
    compile files('libs/ZSDK_ANDROID_API.jar')
    //noinspection GradleCompatible
    compile 'com.android.support:support-v4:23.0.0'
    compile project(':actionbarsherlock')
    compile files('libs/com.datecs.api.jar')
    compile 'com.android.support:multidex:1.0.1'
    compile files('libs/volley.jar')
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.ibuildapp:TwoWayGridView:1.0.0'
    compile files('libs/pinchzoom.jar')
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.4.1'
    compile project(':zxing-android-embedded')
    compile 'com.android.support.constraint:constraint-layout:1.1.3'
    compile 'com.google.android.gms:play-services-location:7.0.0'
}
